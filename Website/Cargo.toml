[package]
name = "Website"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { version = "0.7.4", optional = true,features = ["macros"]}
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
leptos = { version = "0.6.12", features = ["nightly"]}
leptos_axum = { version = "0.6.12", optional = true}
leptos_meta = { version = "0.6.12", features = ["nightly"] }
leptos_router = { version = "0.6.12", features = ["nightly"]}
leptos-captcha = "0.2.0"
leptos-use = "0.10.5"
#leptos-struct-table = { version = "0.9.1", features = ["uuid", "chrono"] }
leptos-struct-table = {version = "0.10.2", features = ["uuid", "chrono"] }
leptos_toaster = {path = "/home/tim/RustroverProjects/leptos_toaster",features = ["builtin_toast"]}
futures = {version="0.3.2"}
num-derive = "0.4.2"
num-traits ="0.2.19"
thaw = {git="https://github.com/thaw-ui/thaw.git"}
charming = { path="/home/tim/RustroverProjects/charming/charming", features = ["wasm"] }
tonic = {version = "0.11.0",optional = true}
prost = {version="0.12",optional = true}

log = "0.4.21"
simple_logger = "5.0.0"
tokio = { version = "1.37.0", optional = true,features = ["rt-multi-thread","time"]}
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.5.2", features = ["fs"], optional = true }
wasm-bindgen = "0.2.92"
thiserror = "1.0.38"
tracing = { version = "0.1.37", optional = true }
http = "1.1.0"
sqlx = { version = "0.7.3", features = ["runtime-tokio","mysql","chrono","uuid","json"],optional = true }
password-auth = {version = "1.0.0", optional = true}
uuid = { version = "1.7.0", features = ["fast-rng", "v4", "serde"], optional = true}
serde = { version = "1.0.195", features = ["derive", "serde_derive"] }
serde_json = {version = "1.0.114", features = ["raw_value"]}
chrono = { version = "0.4.38", features = ["serde","wasmbind"] }
fast_qr = { version = "0.12.3", features = ["svg"] }
local-ip-address = { version = "0.6.1", optional = true }
icondata = "0.3.0"
itertools =  "0.13.0"
rand = "0.8.5"
dotenvy = {version = "0.15.7", optional = true}

axum_session_auth = { version = "0.14.0", optional = true }
axum_session = { version = "0.14.0", optional = true }
axum_session_sqlx = {version = "0.1.0", features = ["mysql","tls-rustls"],default-features = false, optional = true }
anyhow = "1.0.79"
async-trait = "0.1.77"

[features]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate", "thaw/hydrate","leptos_toaster/hydrate"]
ssr = [
    "dep:dotenvy",
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "dep:sqlx",
    "dep:password-auth",
    "dep:axum_session_auth",
    "dep:axum_session",
    "dep:axum_session_sqlx",
    "dep:tracing",
    "dep:uuid",
    "dep:prost",
    "dep:tonic",
    "dep:local-ip-address",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "leptos-use/ssr",
    "leptos_toaster/ssr",
    "thaw/ssr",
]


[build-dependencies]
tonic-build = "0.11"

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "sgas"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# # [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
# end2end-cmd = "npx playwright test"
# end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
